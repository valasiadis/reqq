# build the binary
# build the image

# make a package, publish it to ghcr
# use release as tag name

name: build-and-publish-release
run-name: Build and publish reqq ${{ github.event.release.tag_name }} image

on:
  release:
    types: [published]

jobs:
  build-and-publish:
    # permissions:
    #   contents: read
    #   packages: write
    #   attestations: write
    #   id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
      - name: Build reqq binary
        run: make build-binary
      # may also use `make build-image` for that
      - name: Build reqq OCI image
        id: build-image
        uses: redhat-actions/buildah-build@v2.13
        with:
          image: reqq
          tags: reqq:${{ github.event.release.tag_name }} reqq:${{ github.sha }}
          containerfiles: |
            ./Containerfile
      - name: Push to GHCR
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2.8
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"



